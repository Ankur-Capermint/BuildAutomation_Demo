# name: Unity Build Pipeline

# on:
#   workflow_dispatch:
#     inputs:
#       branch:
#         description: 'Select the branch to build'
#         required: true
#         type: choice
#         options:
#           - main
#           - dev
#           - stage
#           - prod
#         default: main

#       platform:
#         description: 'Select the build platform'
#         required: true
#         type: choice
#         options:
#           - Android
#           - iOS
#           - Windows
#           - macOS
#         default: Android

#       # Platform-specific choices (conditional inputs can be added manually)
#       architecture:
#         description: 'Select the build architecture'
#         required: true
#         type: choice
#         options:
#           - x86
#           - x64
#           - ARM
#         default: x86

#       configuration:
#         description: 'Select the build configuration'
#         required: true
#         type: choice
#         options:
#           - Debug
#           - Release
#         default: Debug

# permissions:
#   contents: read   # Access to repository contents
#   actions: write   # Allow writing actions

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       # Checkout code from the selected branch
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           ref: ${{ github.event.inputs.branch }}

#       # Activate Unity Personal License (if required)
#       - name: Activate Unity Personal License
#         run: |
#           echo "Activating Unity Personal License..."
#       - uses: game-ci/unity-test-runner@v4
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#           UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#           UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#         with:
#           projectPath: ./
#           githubToken: ${{ secrets.GITHUB_TOKEN }}

#       # Set up Unity with the correct action
#       - name: Set up Unity
#         uses: game-ci/unity-builder@v4  # Correct Unity setup action
#         with:
#           customImage: 'unityci/editor:6000.0.30f1'  # Specify the Unity version (adjust if necessary)

#       # Build Unity project based on platform and configuration
#       - name: Build Unity project
#         run: |
#           unity -batchmode -quit -projectPath ./ \
#           -buildTarget ${{ github.event.inputs.platform }} \
#           -architecture ${{ github.event.inputs.architecture }} \
#           -buildPath ./build_output \
#           -configuration ${{ github.event.inputs.configuration }} \
#           -buildName "Build_${{ github.event.inputs.platform }}_${{ github.event.inputs.configuration }}"


name: Actions ðŸ˜Ž

on: [push, pull_request]

permissions:
  contents: write  # Allow read and write access to repository contents
  actions: write   # Allow writing actions (like posting test results)
  checks: write    # Allow interacting with check results (post results)
  issues: write    # Allow posting results as GitHub issues or comments

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      # - uses: actions/cache@v3
      #   with:
      #     path: Library
      #     key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      #     restore-keys: |
      #       Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: Android
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build